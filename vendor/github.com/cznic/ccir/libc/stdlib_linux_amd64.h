// Code generated by running "go generate". DO NOT EDIT.

// +build ignore

// ----------------------------------------------------------------------------
//      /usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h
// ----------------------------------------------------------------------------
/* Copyright (C) 1989-2016 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

// ----------------------------------------------------------------------------
//      /usr/include/stdlib.h
// ----------------------------------------------------------------------------
/* Copyright (C) 1991-2016 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */

typedef long unsigned int size_t;
typedef int wchar_t;
typedef struct {
	int quot;
	int rem;
} div_t;
typedef struct {
	long int quot;
	long int rem;
} ldiv_t;
typedef struct {
	long long int quot;
	long long int rem;
} lldiv_t;
extern size_t __ctype_get_mb_cur_max(void);
extern double atof(char *__nptr);
extern int atoi(char *__nptr);
extern long int atol(char *__nptr);
extern long long int atoll(char *__nptr);
extern double strtod(char *__nptr, char **__endptr);
extern float strtof(char *__nptr, char **__endptr);
extern long double strtold(char *__nptr, char **__endptr);
extern long int strtol(char *__nptr, char **__endptr, int __base);
extern unsigned long int strtoul(char *__nptr, char **__endptr, int __base);
extern long long int strtoll(char *__nptr, char **__endptr, int __base);
extern unsigned long long int strtoull(char *__nptr, char **__endptr, int __base);
extern char *l64a(long int __n);
extern long int a64l(char *__s);
extern long int random(void);
extern void srandom(unsigned int __seed);
extern char *initstate(unsigned int __seed, char *__statebuf, size_t __statelen);
extern char *setstate(char *__statebuf);
extern int rand(void);
extern void srand(unsigned int __seed);
extern int rand_r(unsigned int *__seed);
extern double drand48(void);
extern double erand48(unsigned short int __xsubi[3]);
extern long int lrand48(void);
extern long int nrand48(unsigned short int __xsubi[3]);
extern long int mrand48(void);
extern long int jrand48(unsigned short int __xsubi[3]);
extern void srand48(long int __seedval);
extern unsigned short int *seed48(unsigned short int __seed16v[3]);
extern void lcong48(unsigned short int __param[7]);
extern void *malloc(size_t __size);
extern void *calloc(size_t __nmemb, size_t __size);
extern void *realloc(void *__ptr, size_t __size);
extern void free(void *__ptr);
extern void *valloc(size_t __size);
extern void abort(void);
extern int atexit(void (*__func) (void));
extern void exit(int __status);
extern void _Exit(int __status);
extern char *getenv(char *__name);
extern int putenv(char *__string);
extern char *mktemp(char *__template);
extern int mkstemp64(char *__template);
extern int system(char *__command);
extern char *realpath(char *__name, char *__resolved);
typedef int (*__compar_fn_t) (void *, void *);
extern void *bsearch(void *__key, void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
extern void qsort(void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
extern int abs(int __x);
extern long int labs(long int __x);
extern long long int llabs(long long int __x);
extern div_t div(int __numer, int __denom);
extern ldiv_t ldiv(long int __numer, long int __denom);
extern lldiv_t lldiv(long long int __numer, long long int __denom);
extern char *ecvt(double __value, int __ndigit, int *__decpt, int *__sign);
extern char *fcvt(double __value, int __ndigit, int *__decpt, int *__sign);
extern char *gcvt(double __value, int __ndigit, char *__buf);
extern int mblen(char *__s, size_t __n);
extern int mbtowc(wchar_t * __pwc, char *__s, size_t __n);
extern int wctomb(char *__s, wchar_t __wchar);
extern size_t mbstowcs(wchar_t * __pwcs, char *__s, size_t __n);
extern size_t wcstombs(char *__s, wchar_t * __pwcs, size_t __n);
extern int getsubopt(char **__optionp, char **__tokens, char **__valuep);
extern void setkey(char *__key);
extern int grantpt(int __fd);
extern int unlockpt(int __fd);
extern char *ptsname(int __fd);
extern int ttyslot(void);
#define __size_t__
#define __SIZE_T__
#define _SIZE_T
#define _SYS_SIZE_T_H
#define _T_SIZE_
#define _T_SIZE
#define __SIZE_T
#define _SIZE_T_
#define _BSD_SIZE_T_
#define _SIZE_T_DEFINED_
#define _SIZE_T_DEFINED
#define _BSD_SIZE_T_DEFINED_
#define _SIZE_T_DECLARED
#define ___int_size_t_h
#define _GCC_SIZE_T
#define _SIZET_
#define __size_t
#define __wchar_t__
#define __WCHAR_T__
#define _WCHAR_T
#define _T_WCHAR_
#define _T_WCHAR
#define __WCHAR_T
#define _WCHAR_T_
#define _WCHAR_T_DEFINED_
#define _WCHAR_T_DEFINED
#define _WCHAR_T_H
#define ___int_wchar_t_h
#define __INT_WCHAR_T_H
#define _GCC_WCHAR_T
#define _WCHAR_T_DECLARED
#define NULL ( ( void * ) 0 )
#define _STDLIB_H (1)
#define WEXITSTATUS(status) __WEXITSTATUS ( status )
#define WTERMSIG(status) __WTERMSIG ( status )
#define WSTOPSIG(status) __WSTOPSIG ( status )
#define WIFEXITED(status) __WIFEXITED ( status )
#define WIFSIGNALED(status) __WIFSIGNALED ( status )
#define WIFSTOPPED(status) __WIFSTOPPED ( status )
#define WIFCONTINUED(status) __WIFCONTINUED ( status )
#define __ldiv_t_defined (1)
#define __lldiv_t_defined (1)
#define RAND_MAX (2147483647)
#define EXIT_FAILURE (1)
#define EXIT_SUCCESS (0)
#define MB_CUR_MAX ( __ctype_get_mb_cur_max ( ) )
#define __malloc_and_calloc_defined
#define mkstemp mkstemp64
#define __COMPAR_FN_T
